name: CI-Pipeline

on:
  push:
    branches:
      - "**"

jobs:
  go-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: ["1.15"]
    name: Go ${{ matrix.go }} pipeline

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: build
        working-directory: app
        id: go-build
        run: go build -o orbital .

      - name: format
        working-directory: app
        id: go-fmt
        run: if [ $(gofmt -l -s . | wc -l) -ne 0 ]; then echo "fmt failed"; exit 1; fi

      - name: vet
        working-directory: app
        id: go-vet
        run: go vet ./...

      - name: lint
        working-directory: app
        id: go-lint
        run: if [ $(golint ./... | wc -l) -ne 0 ]; then echo "lint failed"; exit 1; fi

      - name: test
        working-directory: app
        id: go-test
        run: go test -coverprofile=coverage.txt -covermode=atomic ./... ./connectors/... ./database/...

      - name: report
        uses: codecov/codecov-action@v2
        with:
          file: app/coverage.txt
          fail_ci_if_error: true

  js-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: ["14", "16"]
    name: node ${{ matrix.node }} pipeline

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node }}

      - name: install
        working-directory: ui
        id: ui-install
        run: npm install

      - name: build
        working-directory: ui
        id: ui-build
        run: npm run build

      - name: format
        working-directory: ui
        id: ui-fmt
        run: npm run lint:prettier

  docker-app-check:
    runs-on: ubuntu-latest
    name: Docker App Pipeline

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build App Image
        uses: docker/build-push-action@v2
        with:
          context: app
          push: false

  docker-ui-check:
    runs-on: ubuntu-latest
    name: Docker UI Pipeline

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build UI Image
        uses: docker/build-push-action@v2
        with:
          context: ui
          push: false

  docs-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: docs-format
        uses: creyD/prettier_action@v3.3
        with:
          dry: true
          prettier_options: --write . --config ./.prettierrc --ignore-path ./.prettierignore
