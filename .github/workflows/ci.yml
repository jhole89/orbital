name: CI-Pipeline

on:
  push:
    branches:
      - "**"

jobs:
  go-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: ['1.15']
    name: Go ${{ matrix.go }} pipeline

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: build
        working-directory: app
        id: go-build
        run: go build -o orbital .

      - name: format
        working-directory: app
        id: go-fmt
        run: if [ $(gofmt -l -s . | wc -l) -ne 0 ]; then echo "fmt failed"; exit 1; fi

      - name: vet
        working-directory: app
        id: go-vet
        run: go vet ./...

      - name: lint
        working-directory: app
        id: go-lint
        run: if [ $(golint ./... | wc -l) -ne 0 ]; then echo "lint failed"; exit 1; fi

      - name: test
        working-directory: app
        id: go-test
        run: go test -coverprofile=coverage.txt -covermode=atomic . ./connectors/...

      - name: report
        uses: codecov/codecov-action@v2.0.2
        with:
          directory: app/
          file: app/coverage.txt
          fail_ci_if_error: true

  docker-check:
    runs-on: ubuntu-latest
    name: Docker Build Pipeline

    steps:
      - uses: actions/checkout@v2

      - name: Build Image
        uses: docker/build-push-action@v2.6.1
        with:
          path: app
          repository: jhole89/orbital
          push: false
