systemNamespace: "" # orbital-system  # Default namespace
nameOverride: ""
fullnameOverride: ""
httpProbe: true

ui:
  name: ui
  repository: ghcr.io/jhole89/orbital-ui
  tag: latest
  pullPolicy: "Always"
  replicas: 1
  service:
    type: NodePort
    port: 80
  resources: {}
#    requests:
#      memory: "50Mi"
#      cpu: "50m"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  secrets: []

app:
  name: app
  repository: ghcr.io/jhole89/orbital-app
  tag: latest
  pullPolicy: "Always"
  replcas: 1
  service:
    type: NodePort
    port: 80
  resources: {}
  #    requests:
  #      memory: "50Mi"
  #      cpu: "50m"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  secrets: []

gremlin:
  name: db
  repository: tinkerpop/gremlin-server
  tag: latest
  pullPolicy: "Always"
  replcas: 1
  service:
    type: NodePort
    port: 80
  resources: {}
  #    requests:
  #      memory: "50Mi"
  #      cpu: "50m"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  secrets: []

serviceAccount:
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000



ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: orbital.local
#      serviceName: ingress
#      servicePort: 8080
      path: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


nodeSelector: {}

tolerations: []

affinity: {}
